Process for building something using Python, specifically with object-oriented programming. This is taken from https://learnpythonthehardway.org/book/ex43.html

The Top Down Approach (https://learnpythonthehardway.org/book/ex43.html)
1. Write or draw about the problem.
2. Extract key concepts from 1 and research them. 
3. Create a class hierarchy and object map for the concepts.
4. Code the classes and a test to run them. 
5. Repeat and refine.

The Bottom Up Approach (https://learnpythonthehardway.org/book/ex43.html)
1. Take a small piece of the problem; hack on some code and get it to run barely.
2. Refine the code into something more formal with classes and automated tests.
3. Extract the kept concepts you're using and try to find research for them.
4. Write a description of what's really going on. 
5. Go back and refine the code, possibly throwing it out and starting over. 
6. Repeat, moving on to some other piece of the problem.

Inheritance or Composition (https://learnpythonthehardway.org/book/ex44.html)
1. Avoid multiple inheritance at all costs, as it's too complex to be reliable. If you're stuck with it, then be prepared to know the class hierarchy and spend time finding where everything is coming from.
2. Use composition to package code into modules that are used in many different unrelated places and situations. 
3. Use inheritance only when there are clearly related reusable pieces of code that fit under a single common concept or if you have to because of something you're using.